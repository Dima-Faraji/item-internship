<queries>
   
   <aQuery>
       <region name="USA" />
       <region name="Canada" />
       <region name="Japan" />
       <region name="Australia_NZ" />
       <region name="China" />
       <region name="Middle East" />
       <region name="Southeast Asia" />
       <region name="India" />
       <region name="Africa_Eastern" />
       <region name="Africa_Northern" />
       <region name="Africa_Southern" />
       <region name="Africa_Western" />
       <region name="Brazil" />
       <region name="Central America and Caribbean" />
       <region name="Central Asia" />
       <region name="EU-12" />
       <region name="EU-15" />
       <region name="Europe_Eastern" />
       <region name="Europe_Non_EU" />
       <region name="European Free Trade Association" />
       <region name="Indonesia" />
       <region name="Mexico" />
       <region name="Pakistan" />
       <region name="Russia" />
       <region name="South Africa" />
       <region name="South America_Northern" />
       <region name="South America_Southern" />
       <region name="Argentina" />
       <region name="Colombia" />
       <region name="South Asia" />
       <region name="South Korea" />
       <region name="Taiwan" />
         <demographicsQuery title="Population by region">
            <axis1 name="region">region</axis1>
            <axis2 name="Year">populationMiniCAM</axis2>
            <xPath buildList="true" dataName="total-population" group="false" sumAll="false">demographics/populationMiniCAM/total-population/node()</xPath>
            <comments/>
         </demographicsQuery>
   </aQuery>
   <aQuery>
       <region name="USA" />
       <region name="Canada" />
       <region name="Japan" />
       <region name="Australia_NZ" />
       <region name="China" />
       <region name="Middle East" />
       <region name="Southeast Asia" />
       <region name="India" />
       <region name="Africa_Eastern" />
       <region name="Africa_Northern" />
       <region name="Africa_Southern" />
       <region name="Africa_Western" />
       <region name="Brazil" />
       <region name="Central America and Caribbean" />
       <region name="Central Asia" />
       <region name="EU-12" />
       <region name="EU-15" />
       <region name="Europe_Eastern" />
       <region name="Europe_Non_EU" />
       <region name="European Free Trade Association" />
       <region name="Indonesia" />
       <region name="Mexico" />
       <region name="Pakistan" />
       <region name="Russia" />
       <region name="South Africa" />
       <region name="South America_Northern" />
       <region name="South America_Southern" />
       <region name="Argentina" />
       <region name="Colombia" />
       <region name="South Asia" />
       <region name="South Korea" />
       <region name="Taiwan" />
		<gdpQueryBuilder title="GDP per capita PPP by region">
			<axis1 name="region">region</axis1>
			<axis2 name="Year">gdp-per-capita-ppp</axis2>
			<xPath buildList="true" dataName="gdp-per-capita-ppp" group="false" sumAll="false">GDP/gdp-per-capita-ppp/text()</xPath>
			<comments/>
		</gdpQueryBuilder>
   </aQuery>
      
      <aQuery>
       <region name="USA" />
      <marketQuery title="CO2 prices">
         <axis1 name="market">market</axis1>
         <axis2 name="Year">market</axis2>
         <xPath buildList="true" dataName="price" group="false" sumAll="false">Marketplace/market[true() and contains(@name,'CO2')]/price/node()</xPath>
         <comments/>
      </marketQuery>
      </aQuery>
      
      <aQuery>
       <region name="USA" />
       <region name="Canada" />
       <region name="Japan" />
       <region name="Australia_NZ" />
       <region name="China" />
       <region name="Middle East" />
       <region name="Southeast Asia" />
       <region name="India" />
       <region name="Africa_Eastern" />
       <region name="Africa_Northern" />
       <region name="Africa_Southern" />
       <region name="Africa_Western" />
       <region name="Brazil" />
       <region name="Central America and Caribbean" />
       <region name="Central Asia" />
       <region name="EU-12" />
       <region name="EU-15" />
       <region name="Europe_Eastern" />
       <region name="Europe_Non_EU" />
       <region name="European Free Trade Association" />
       <region name="Indonesia" />
       <region name="Mexico" />
       <region name="Pakistan" />
       <region name="Russia" />
       <region name="South Africa" />
       <region name="South America_Northern" />
       <region name="South America_Southern" />
       <region name="Argentina" />
       <region name="Colombia" />
       <region name="South Asia" />
       <region name="South Korea" />
       <region name="Taiwan" />
      <emissionsQueryBuilder title="GHG emissions by region">
         <axis1 name="GHG">GHG</axis1>
         <axis2 name="Year">emissions</axis2>
         <xPath buildList="true" dataName="emissions" group="false" sumAll="false">*[@type = 'sector' (:collapse:) or @type = 'resource' (: collapse :)]//*[@type = 'GHG']/emissions/node()</xPath>
         <comments/>
      </emissionsQueryBuilder>
      </aQuery>
      <aQuery>
       <region name="USA" />
      <ClimateQuery title="CO2 concentrations">
         <axis1 name="CO2-concentration">none</axis1>
         <axis2 name="Year">CO2-concentration[@year]</axis2>
         <xPath buildList="true" dataName="CO2-concentration" group="false" sumAll="false">climate-model/CO2-concentration/text()</xPath>
         <comments/>
      </ClimateQuery>
      </aQuery>
      <aQuery>
       <region name="USA" />
       <region name="Canada" />
       <region name="Japan" />
       <region name="Australia_NZ" />
       <region name="China" />
       <region name="Middle East" />
       <region name="Southeast Asia" />
       <region name="India" />
       <region name="Africa_Eastern" />
       <region name="Africa_Northern" />
       <region name="Africa_Southern" />
       <region name="Africa_Western" />
       <region name="Brazil" />
       <region name="Central America and Caribbean" />
       <region name="Central Asia" />
       <region name="EU-12" />
       <region name="EU-15" />
       <region name="Europe_Eastern" />
       <region name="Europe_Non_EU" />
       <region name="European Free Trade Association" />
       <region name="Indonesia" />
       <region name="Mexico" />
       <region name="Pakistan" />
       <region name="Russia" />
       <region name="South Africa" />
       <region name="South America_Northern" />
       <region name="South America_Southern" />
       <region name="Argentina" />
       <region name="Colombia" />
       <region name="South Asia" />
       <region name="South Korea" />
       <region name="Taiwan" />
      <ClimateQuery title="Climate forcing">
         <axis1 name="forcing-total">none</axis1>
         <axis2 name="Year">forcing-total[@year]</axis2>
         <xPath buildList="true" dataName="forcing-total" group="false" sumAll="false">climate-model/forcing-total/text()</xPath>
         <comments/>
      </ClimateQuery>
      </aQuery>
      
      <aQuery>
       <region name="USA" />
       <region name="Canada" />
       <region name="Japan" />
       <region name="Australia_NZ" />
       <region name="China" />
       <region name="Middle East" />
       <region name="Southeast Asia" />
       <region name="India" />
       <region name="Africa_Eastern" />
       <region name="Africa_Northern" />
       <region name="Africa_Southern" />
       <region name="Africa_Western" />
       <region name="Brazil" />
       <region name="Central America and Caribbean" />
       <region name="Central Asia" />
       <region name="EU-12" />
       <region name="EU-15" />
       <region name="Europe_Eastern" />
       <region name="Europe_Non_EU" />
       <region name="European Free Trade Association" />
       <region name="Indonesia" />
       <region name="Mexico" />
       <region name="Pakistan" />
       <region name="Russia" />
       <region name="South Africa" />
       <region name="South America_Northern" />
       <region name="South America_Southern" />
       <region name="Argentina" />
       <region name="Colombia" />
       <region name="South Asia" />
       <region name="South Korea" />
       <region name="Taiwan" />
		<supplyDemandQuery title="Transportation service output by technology and vintage">
			<axis1 name="technology">technology</axis1>
			<axis2 name="Year">physical-output[@vintage]</axis2>
			<xPath buildList="true" dataName="output" group="false" sumAll="false">*[@type = 'sector' and (@name='transportation' or (exists(child::keyword[@final-energy='transportation'])))]/*[@type = 'subsector']/*[@type = 'technology']/*[@type='output' (:collapse:)]/physical-output/node()</xPath>
			<comments/>
			<showAttribute attribute-name="year" level="technology"/>
		</supplyDemandQuery>
      </aQuery>
      
      <aQuery>
       <region name="USA" />
       <region name="Canada" />
       <region name="Japan" />
       <region name="Australia_NZ" />
       <region name="China" />
       <region name="Middle East" />
       <region name="Southeast Asia" />
       <region name="India" />
       <region name="Africa_Eastern" />
       <region name="Africa_Northern" />
       <region name="Africa_Southern" />
       <region name="Africa_Western" />
       <region name="Brazil" />
       <region name="Central America and Caribbean" />
       <region name="Central Asia" />
       <region name="EU-12" />
       <region name="EU-15" />
       <region name="Europe_Eastern" />
       <region name="Europe_Non_EU" />
       <region name="European Free Trade Association" />
       <region name="Indonesia" />
       <region name="Mexico" />
       <region name="Pakistan" />
       <region name="Russia" />
       <region name="South Africa" />
       <region name="South America_Northern" />
       <region name="South America_Southern" />
       <region name="Argentina" />
       <region name="Colombia" />
       <region name="South Asia" />
       <region name="South Korea" />
       <region name="Taiwan" />
		<supplyDemandQuery title="Transportation final energy by technology and vintage">
			<axis1 name="technology">technology</axis1>
			<axis2 name="Year">demand-physical[@vintage]</axis2>
			<xPath buildList="true" dataName="input" group="false" sumAll="false">*[@type = 'sector' and (@name='transportation' or (exists(child::keyword[@final-energy='transportation'])))]/*[@type = 'subsector']/*[@type = 'technology']/*[@type='input' and not (@name='renewable')]/demand-physical[@unit='EJ']/node()</xPath><comments/><showAttribute attribute-name="year" level="technology"/>
		</supplyDemandQuery>
      </aQuery>
      <aQuery>
       <region name="USA" />
       <region name="Canada" />
       <region name="Japan" />
       <region name="Australia_NZ" />
       <region name="China" />
       <region name="Middle East" />
       <region name="Southeast Asia" />
       <region name="India" />
       <region name="Africa_Eastern" />
       <region name="Africa_Northern" />
       <region name="Africa_Southern" />
       <region name="Africa_Western" />
       <region name="Brazil" />
       <region name="Central America and Caribbean" />
       <region name="Central Asia" />
       <region name="EU-12" />
       <region name="EU-15" />
       <region name="Europe_Eastern" />
       <region name="Europe_Non_EU" />
       <region name="European Free Trade Association" />
       <region name="Indonesia" />
       <region name="Mexico" />
       <region name="Pakistan" />
       <region name="Russia" />
       <region name="South Africa" />
       <region name="South America_Northern" />
       <region name="South America_Southern" />
       <region name="Argentina" />
       <region name="Colombia" />
       <region name="South Asia" />
       <region name="South Korea" />
       <region name="Taiwan" />
		<supplyDemandQuery title="Transportation load factors">
			<axis1 name="technology">technology</axis1>
			<axis2 name="Year">technology</axis2>
			<xPath buildList="true" dataName="output" group="false" sumAll="false">*[@type = 'sector' and (@name='transportation' or (exists(child::keyword[@final-energy='transportation'])))]/*[@type = 'subsector']/*[@type = 'technology']//load-factor/node()</xPath>
			<comments/>
		</supplyDemandQuery>
      </aQuery>
      <aQuery>
       <region name="USA" />
       <region name="Canada" />
       <region name="Japan" />
       <region name="Australia_NZ" />
       <region name="China" />
       <region name="Middle East" />
       <region name="Southeast Asia" />
       <region name="India" />
       <region name="Africa_Eastern" />
       <region name="Africa_Northern" />
       <region name="Africa_Southern" />
       <region name="Africa_Western" />
       <region name="Brazil" />
       <region name="Central America and Caribbean" />
       <region name="Central Asia" />
       <region name="EU-12" />
       <region name="EU-15" />
       <region name="Europe_Eastern" />
       <region name="Europe_Non_EU" />
       <region name="European Free Trade Association" />
       <region name="Indonesia" />
       <region name="Mexico" />
       <region name="Pakistan" />
       <region name="Russia" />
       <region name="South Africa" />
       <region name="South America_Northern" />
       <region name="South America_Southern" />
       <region name="Argentina" />
       <region name="Colombia" />
       <region name="South Asia" />
       <region name="South Korea" />
       <region name="Taiwan" />
		<supplyDemandQuery title="Refined liquids production by subsector">
			<axis1 name="subsector">subsector</axis1>
			<axis2 name="Year">physical-output[@vintage]</axis2>
			<xPath buildList="true" dataName="output" group="false" sumAll="false">*[@type = 'sector' (:collapse:) and ((@name='refining'))]/*[@type = 'subsector']//*[@type='output' (:collapse:)]/physical-output/node()</xPath>
			<comments/>
		</supplyDemandQuery>
      </aQuery>
      <aQuery>
       <region name="USA" />
       <region name="Canada" />
       <region name="Japan" />
       <region name="Australia_NZ" />
       <region name="China" />
       <region name="Middle East" />
       <region name="Southeast Asia" />
       <region name="India" />
       <region name="Africa_Eastern" />
       <region name="Africa_Northern" />
       <region name="Africa_Southern" />
       <region name="Africa_Western" />
       <region name="Brazil" />
       <region name="Central America and Caribbean" />
       <region name="Central Asia" />
       <region name="EU-12" />
       <region name="EU-15" />
       <region name="Europe_Eastern" />
       <region name="Europe_Non_EU" />
       <region name="European Free Trade Association" />
       <region name="Indonesia" />
       <region name="Mexico" />
       <region name="Pakistan" />
       <region name="Russia" />
       <region name="South Africa" />
       <region name="South America_Northern" />
       <region name="South America_Southern" />
       <region name="Argentina" />
       <region name="Colombia" />
       <region name="South Asia" />
       <region name="South Korea" />
       <region name="Taiwan" />
      <emissionsQueryBuilder title="BC Emissions by Transportation">
         <axis1 name="technology">technology</axis1>
         <axis2 name="Year">emissions</axis2>
         <xPath buildList="true" dataName="emissions" group="false" sumAll="false">*[@type = 'sector' and (@name='transportation' or (exists(child::keyword[@final-energy='transportation'])))]/*[@type='subsector']/*[@type='technology']/*[@type = 'GHG' and (@name='BC')]/emissions/node()</xPath>
         <comments/>
      </emissionsQueryBuilder>
      </aQuery>
      <aQuery>
       <region name="USA" />
       <region name="Canada" />
       <region name="Japan" />
       <region name="Australia_NZ" />
       <region name="China" />
       <region name="Middle East" />
       <region name="Southeast Asia" />
       <region name="India" />
       <region name="Africa_Eastern" />
       <region name="Africa_Northern" />
       <region name="Africa_Southern" />
       <region name="Africa_Western" />
       <region name="Brazil" />
       <region name="Central America and Caribbean" />
       <region name="Central Asia" />
       <region name="EU-12" />
       <region name="EU-15" />
       <region name="Europe_Eastern" />
       <region name="Europe_Non_EU" />
       <region name="European Free Trade Association" />
       <region name="Indonesia" />
       <region name="Mexico" />
       <region name="Pakistan" />
       <region name="Russia" />
       <region name="South Africa" />
       <region name="South America_Northern" />
       <region name="South America_Southern" />
       <region name="Argentina" />
       <region name="Colombia" />
       <region name="South Asia" />
       <region name="South Korea" />
       <region name="Taiwan" />
      <emissionsQueryBuilder title="CH4 Emissions by Transportation">
         <axis1 name="technology">technology</axis1>
         <axis2 name="Year">emissions</axis2>
         <xPath buildList="true" dataName="emissions" group="false" sumAll="false">*[@type = 'sector' and (@name='transportation' or (exists(child::keyword[@final-energy='transportation'])))]/*[@type='subsector']/*[@type='technology']/*[@type = 'GHG' and (@name='CH4')]/emissions/node()</xPath>
         <comments/>
      </emissionsQueryBuilder>
      </aQuery>
      <aQuery>
       <region name="USA" />
       <region name="Canada" />
       <region name="Japan" />
       <region name="Australia_NZ" />
       <region name="China" />
       <region name="Middle East" />
       <region name="Southeast Asia" />
       <region name="India" />
       <region name="Africa_Eastern" />
       <region name="Africa_Northern" />
       <region name="Africa_Southern" />
       <region name="Africa_Western" />
       <region name="Brazil" />
       <region name="Central America and Caribbean" />
       <region name="Central Asia" />
       <region name="EU-12" />
       <region name="EU-15" />
       <region name="Europe_Eastern" />
       <region name="Europe_Non_EU" />
       <region name="European Free Trade Association" />
       <region name="Indonesia" />
       <region name="Mexico" />
       <region name="Pakistan" />
       <region name="Russia" />
       <region name="South Africa" />
       <region name="South America_Northern" />
       <region name="South America_Southern" />
       <region name="Argentina" />
       <region name="Colombia" />
       <region name="South Asia" />
       <region name="South Korea" />
       <region name="Taiwan" />
      <supplyDemandQuery title="CO2 emissions from fuel production">
         <axis1 name="sector">sector[@name]</axis1>
         <axis2 name="Year">emissions[@year]</axis2>
         <xPath buildList="true" dataName="input" group="false" sumAll="false">
            declare function local:append-heirarchy($parent as node(), $append as node()*) as node() {
            let $scn := $parent/ancestor::scenario,
            $rgn := $parent (: /ancestor::region :)
            return
            document { element scenario {
            $scn/@*,
            element region {
            $rgn/@*,
            $append
            }
            }
            }
            (: I can get by with just the scenario and region
            let $new_node := element {local-name($parent)} {$parent/@*, $append} 	
            return
            if(local-name($parent) != 'scenario')
            then local:append-heirarchy($parent/parent::*, $new_node)
            else document { $new_node } :)
            }; 
            declare function local:get-carbon-coef($good as xs:string) as xs:decimal {
            let $carbonCoefs := (
            &lt;PrimaryFuelCO2Coef name="biomass"&gt;0&lt;/PrimaryFuelCO2Coef&gt;,
            &lt;PrimaryFuelCO2Coef name="coal"&gt;27.3&lt;/PrimaryFuelCO2Coef&gt;,
            &lt;PrimaryFuelCO2Coef name="crude oil"&gt;19.6&lt;/PrimaryFuelCO2Coef&gt;,
            &lt;PrimaryFuelCO2Coef name="delivered biomass"&gt;23&lt;/PrimaryFuelCO2Coef&gt;,
            &lt;PrimaryFuelCO2Coef name="delivered coal"&gt;27.3&lt;/PrimaryFuelCO2Coef&gt;,
            &lt;PrimaryFuelCO2Coef name="delivered gas"&gt;14.2&lt;/PrimaryFuelCO2Coef&gt;,
            &lt;PrimaryFuelCO2Coef name="gas pipeline"&gt;14.2&lt;/PrimaryFuelCO2Coef&gt;,
            &lt;PrimaryFuelCO2Coef name="gas processing"&gt;14.2&lt;/PrimaryFuelCO2Coef&gt;,
            &lt;PrimaryFuelCO2Coef name="limestone"&gt;0.08&lt;/PrimaryFuelCO2Coef&gt;,
            &lt;PrimaryFuelCO2Coef name="natural gas"&gt;14.2&lt;/PrimaryFuelCO2Coef&gt;,
            &lt;PrimaryFuelCO2Coef name="refined liquids enduse"&gt;19.6&lt;/PrimaryFuelCO2Coef&gt;,
            &lt;PrimaryFuelCO2Coef name="refined liquids industrial"&gt;19.6&lt;/PrimaryFuelCO2Coef&gt;,
            &lt;PrimaryFuelCO2Coef name="refining"&gt;19.6&lt;/PrimaryFuelCO2Coef&gt;,
            &lt;PrimaryFuelCO2Coef name="regional biomass"&gt;23&lt;/PrimaryFuelCO2Coef&gt;,
            &lt;PrimaryFuelCO2Coef name="regional biomassOil"&gt;19.6&lt;/PrimaryFuelCO2Coef&gt;,
            &lt;PrimaryFuelCO2Coef name="regional coal"&gt;27.3&lt;/PrimaryFuelCO2Coef&gt;,
            &lt;PrimaryFuelCO2Coef name="regional corn for ethanol"&gt;19.6&lt;/PrimaryFuelCO2Coef&gt;,
            &lt;PrimaryFuelCO2Coef name="regional natural gas"&gt;14.2&lt;/PrimaryFuelCO2Coef&gt;,
            &lt;PrimaryFuelCO2Coef name="regional oil"&gt;19.6&lt;/PrimaryFuelCO2Coef&gt;,
            &lt;PrimaryFuelCO2Coef name="regional sugar for ethanol"&gt;19.6&lt;/PrimaryFuelCO2Coef&gt;,
            &lt;PrimaryFuelCO2Coef name="traded unconventional oil"&gt;19.6&lt;/PrimaryFuelCO2Coef&gt;,
            &lt;PrimaryFuelCO2Coef name="unconventional oil"&gt;21.1&lt;/PrimaryFuelCO2Coef&gt;,
            &lt;PrimaryFuelCO2Coef name="unconventional oil production"&gt;19.6&lt;/PrimaryFuelCO2Coef&gt;,
            &lt;PrimaryFuelCO2Coef name="wholesale gas"&gt;14.2&lt;/PrimaryFuelCO2Coef&gt;),
            $currCoef := $carbonCoefs[@name=$good]/text()
            return if(exists($currCoef)) then $currCoef else 0.0
            };
            
            
            declare function local:is-carbonatious-fuel($good as xs:string) as xs:boolean {
            not(local:get-carbon-coef($good) = 0.0)
            };
            declare function local:generate-sector-output-coefs($inputNameQueue as xs:string*, $currTree as node(), $coefs as node()*, $is_usa as xs:boolean) as node()* {
            if(empty($inputNameQueue)) then $coefs
            else if( exists($coefs[@name = $inputNameQueue[1]]) or exists(index-of(('traded unconventional oil'),
            $inputNameQueue[1])) or not($currTree/*[@type='sector' and @name=$inputNameQueue[1]]) or not(local:is-carbonatious-fuel($inputNameQueue[1])))
            then 
            local:generate-sector-output-coefs(remove($inputNameQueue, 1), $currTree, $coefs, $is_usa)
            else
            let $inputName := $inputNameQueue[1],
            $newInputNameQueue := remove($inputNameQueue, 1),
            $useInputs := $currTree//*[@type='input' and @name=$inputName],
            $useSectors := distinct-values($useInputs/ancestor::*[@type='sector']/@name),
            $totalInputSum := for $vintage in distinct-values($useInputs/demand-physical/@vintage)
            return element input {
            attribute vintage { $vintage },
            text {
            sum($useInputs/demand-physical[@vintage=$vintage])
            }
            },
            $new_coefs := if(empty($useSectors)) then
            $coefs
            else
            $coefs | element sector {
            attribute name { $inputName },
            for $output in $useSectors
            return element output {
            attribute name { $output },
            for $inputSum in $totalInputSum
            let $currSectorInputs := $useInputs[ancestor::*[@type='sector' and @name=$output]],
            $outputSum := sum($currSectorInputs/demand-physical[@vintage=$inputSum/@vintage]),
            $carbonIn := sum($currSectorInputs/parent::*//carbon-content[@vintage=$inputSum/@vintage]),
            $carbonOut := sum($currSectorInputs/parent::*/output-primary/physical-output[@vintage=$inputSum/@vintage]) *
            local:get-carbon-coef($output)
            return (element share {
            attribute vintage { $inputSum/@vintage },
            text { $outputSum div $inputSum }
            }, element carbon_ratio {
            attribute vintage { $inputSum/@vintage },
            text{ if($carbonIn &gt; 0) then $carbonOut div $carbonIn else 0 }
            })
            }
            }
            return 
            local:generate-sector-output-coefs(distinct-values(($newInputNameQueue, $useSectors)), $currTree, $new_coefs, $is_usa)
            };
            declare function local:apply-coefs($outputName as xs:string, $emissions as node()*, $coefs as node()*) as node()* {
            if(exists($coefs[@name=$outputName]) and abs(sum($emissions)) &gt; 0.001) then
            for $output in $coefs[@name=$outputName]/output
            let $emiss_go := for $year in distinct-values($emissions/@year)
            let $emissThisVintage := $emissions[@year=$year],
            $firstEmiss := $emissThisVintage[1],
            $emissSum := sum($emissThisVintage),
            $shareThisVintage := $output/share[@vintage=$year],
            $carbonRatioThisVintage := $output/carbon_ratio[@vintage=$year],
            $coefThisVintage := $shareThisVintage * $carbonRatioThisVintage
            where $coefThisVintage &gt; 0
            return element { local-name($firstEmiss) } {
            $firstEmiss/@*,
            text{ $emissSum * $coefThisVintage }
            },
            $emiss_stay := for $year in distinct-values($emissions/@year)
            let $emissThisVintage := $emissions[@year=$year],
            $firstEmiss := $emissThisVintage[1],
            $emissSum := sum($emissThisVintage),
            $shareThisVintage := $output/share[@vintage=$year],
            $carbonRatioThisVintage := 1.0 - $output/carbon_ratio[@vintage=$year],
            $coefThisVintage := $shareThisVintage * $carbonRatioThisVintage 
            where $coefThisVintage &gt; 0
            return element { local-name($firstEmiss) } {
            $firstEmiss/@*,
            text{ $emissSum * $coefThisVintage }
            }
            return local:apply-coefs($output/@name, $emiss_go, $coefs) |
            element sector {
            attribute name { $output/@name},
            attribute type { 'sector' },
            $emiss_stay
            }
            else if( abs(sum($emissions)) &gt; 0.001) then
            element sector {
            attribute name { $outputName },
            attribute type { 'sector' },
            $emissions
            }
            else
            (: These are the residuals from chasing simulenaties, I've left this here
            for debuging purposes :)
            element sector {
            attribute name { $outputName },
            attribute type { 'sector' }(:,
            $emissions:)
            }
            };
            declare function local:run-emiss-by-enduse($scenarios as xs:string*, $regions as xs:string*, $collection as xs:string) as node()* { 	
            (:unordered { :) 	
            let $regionsG := if(not($regions[1] = 'Global'))
            then $regions
            else distinct-values(collection($collection)/scenario/world/*[@type='region']/@name)
            return
            for $scenario in $scenarios, 	    
            $region in $regionsG 	
            let $scenario_split := tokenize($scenario, ' '), 	    
            $currTree := collection($collection)/scenario[@name = $scenario_split[1] and @date = $scenario_split[2]]/world/*[@type='region' and @name=$region],
            $sector_emiss := $currTree/*[@type='sector' and not(@name='regional biomass' or @name='regional biomassOil' or @name='regional corn for ethanol' or @name='regional sugar for ethanol' or @name='regional sugarbeet for ethanol')]//CO2[@type='GHG' (: collapse :) and @name='CO2']/emissions/text(),
            $currEmissSectors := $currTree/*[@type='sector' and (@name='regional biomass' or @name='regional biomassOil' or @name='regional corn for ethanol' or @name='regional sugar for ethanol' or @name='regional sugarbeet for ethanol')],
            $coefs := local:generate-sector-output-coefs(distinct-values($currEmissSectors/@name), $currTree, (), false()),
            $downstream_emiss := for $sectorName in distinct-values($currEmissSectors/@name)
            return local:append-heirarchy($currTree, local:apply-coefs($sectorName, $currEmissSectors[@name=$sectorName]//CO2[@name='CO2']/emissions, $coefs))//text() 
            return ($sector_emiss, $downstream_emiss )
            (:  } :)
            };
            local:run-emiss-by-enduse((:scenarios:), (:regions:), (:collection:))
         </xPath>
         <comments/>
         <labelRewriteList append-values="false">
            <level name="sector">
               <rewrite from="comm heating" to=""/>
               <rewrite from="industrial energy use" to=""/>
               <rewrite from="comm cooling" to=""/>
               <rewrite from="subpeak generation" to=""/>
               <rewrite from="refining" to="Total Liquids"/>
               <rewrite from="delivered gas" to=""/>
               <rewrite from="district heat" to=""/>
               <rewrite from="trn_aviation_intl" to=""/>
               <rewrite from="gas processing" to="Natural Gas"/>
               <rewrite from="resid heating" to=""/>
               <rewrite from="H2 central production" to="Hydrogen"/>
               <rewrite from="process heat cement" to=""/>
               <rewrite from="delivered biomass" to=""/>
               <rewrite from="industrial feedstocks" to=""/>
               <rewrite from="trn_shipping_intl" to=""/>
               <rewrite from="trn_pass_road" to=""/>
               <rewrite from="trn_pass_road_bus" to=""/>
               <rewrite from="trn_freight_road" to=""/>
               <rewrite from="trn_pass_road_LDV" to=""/>
               <rewrite from="trn_pass_road_LDV_4W" to=""/>
               <rewrite from="trn_pass_road_LDV_2W" to=""/>
               <rewrite from="trn_freight" to=""/>
               <rewrite from="comm others" to=""/>
               <rewrite from="electricity" to="Electricity"/>
               <rewrite from="wholesale gas" to=""/>
               <rewrite from="cement" to=""/>
               <rewrite from="trn_pass" to=""/>
               <rewrite from="N fertilizer" to=""/>
               <rewrite from="gas pipeline" to="Natural Gas"/>
               <rewrite from="resid others" to=""/>
               <rewrite from="unconventional oil production" to="Total Liquids"/>
               <rewrite from="backup_electricity" to="Electricity"/>
               <rewrite from="resid cooling" to=""/>
               <rewrite from="csp_backup" to="Electricity"/>
               <rewrite from="H2 forecourt production" to="Hydrogen"/>
               <rewrite from="refined liquids industrial" to=""/>
               <rewrite from="refined liquids enduse" to=""/>
            </level>
         </labelRewriteList>
      </supplyDemandQuery>
      </aQuery>
      <aQuery>
       <region name="USA" />
       <region name="Canada" />
       <region name="Japan" />
       <region name="Australia_NZ" />
       <region name="China" />
       <region name="Middle East" />
       <region name="Southeast Asia" />
       <region name="India" />
       <region name="Africa_Eastern" />
       <region name="Africa_Northern" />
       <region name="Africa_Southern" />
       <region name="Africa_Western" />
       <region name="Brazil" />
       <region name="Central America and Caribbean" />
       <region name="Central Asia" />
       <region name="EU-12" />
       <region name="EU-15" />
       <region name="Europe_Eastern" />
       <region name="Europe_Non_EU" />
       <region name="European Free Trade Association" />
       <region name="Indonesia" />
       <region name="Mexico" />
       <region name="Pakistan" />
       <region name="Russia" />
       <region name="South Africa" />
       <region name="South America_Northern" />
       <region name="South America_Southern" />
       <region name="Argentina" />
       <region name="Colombia" />
       <region name="South Asia" />
       <region name="South Korea" />
       <region name="Taiwan" />
		<supplyDemandQuery title="Final energy demand by selected fuels">
			<axis1 name="input">input</axis1>
			<axis2 name="Year">demand-physical[@vintage]</axis2>
			<xPath buildList="true" dataName="input" group="false" sumAll="false">*[@type='sector' (: collapse :) and ((@name='building' or @name='industry' or @name='transportation') or (exists(child::keyword/@final-energy)))]//*[@type='input']/demand-physical[@unit='EJ']/node()</xPath>
			<comments/>
			<labelRewriteList append-values="false">
			<level name="input">
				<rewrite from="delivered biomass" to=""/>
				<rewrite from="H2 enduse" to="Hydrogen"/>
				<rewrite from="traditional biomass" to=""/>
				<rewrite from="elect_td_bld" to="Electricity"/>
				<rewrite from="refined liquids enduse" to="Total Liquids"/>
				<rewrite from="delivered coal" to=""/>
				<rewrite from="elect_td_trn" to="Electricity"/>
				<rewrite from="elect_td_ind" to="Electricity"/>
				<rewrite from="delivered gas" to="Natural Gas"/>
				<rewrite from="refined liquids industrial" to="Total Liquids"/>
				<rewrite from="wholesale gas" to="Natural Gas"/>
				<rewrite from="district heat" to=""/>
				<rewrite from="industrial feedstocks" to=""/>
				<rewrite from="industrial energy use" to=""/>
				<rewrite from="process heat cement" to=""/>
				<rewrite from="renewable" to=""/>
			</level>
			</labelRewriteList>
		</supplyDemandQuery>
      </aQuery>

</queries>
   
