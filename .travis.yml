os: linux
dist: bionic
language: python
python: 3.8-dev

branches:
  only:
  - master

cache:
  directories:
  - $HOME/.cache/item
  - $HOME/.cache/pip
  - $HOME/.conda/pkgs

env:
  global:
  - CACHE=$HOME/.cache/item
  # OK_API_KEY
  - secure: gDIWMu6MUf20OBW5wBQek/m2mKVGAOgJ1VLAT358bsUB1JiJLByQLuFYa6OoaNvgSXre91kRIaklHMu58HFja5hwloV9KuEVyqGPIj8ZQU2jLPYjJJj1jsy0qFPv6FMShinb6gXhJ1+HKXFLHyZuDe6cL+lP7pgtBO7kFsEaYPB1rfb1gRIN9hyN6afHPF4KEBH/0umWsdRJEWeOOKmPbONJYqYTmPtt8clx51F/74MHGkv0+6RTPcibE8YgmnwfsaEdrEKzN9rgaaZof4yJl9qVBhRu4QeTYMmLvku7Uu6d4xEGVLDISUKyBKNGWynvpKYR6E+G0Vj7O4ZrpXEibWR5p4mG911m5wHpjJd2r2Xvw0Atkq2kXhjNrXnSOJ8EMlmIxD9kuZkVWT5YHdO6YGkxBkKdk9IzfTHS9y88RqBqHotPA7hGmzUYEPFCqw01QJEeXyowUmWYM/HwHo89G3PLEQGIKfRRe3w5J6uFI2q+vKsMHJciD93BB+hl9s8Ty3giRVZD4P354wt1vVGoM968YBdalXXpj0MV/4IFBizPzln2bDovsGN4nuEhsqnYgVqENh42rkGg58hm8lTpfDuBosj2KjuW8+j9DSR4sj335E6rzBE7vraM/maJnSvmXoPch+Oau7ePeVo6AfecTtH8vwqZ9EQoBPFpr5JaH+U=

before_install: source ci/before-install.sh

install:
# Install Python requirements
- pip install --requirement ci/requirements.txt --progress-bar off
- pip install --editable .[doc,eppa,hist,tests]

script:
- pytest --pyargs item --cov=item --cov-report=term-missing --verbose
# Create diagnostics
- item historical diagnostics output/

after_success:
- coverage combine
- codecov
# Upload diagnostic artifacts to Google Cloud Storage
- >-
  rclone --config=ci/rclone.conf --progress
  copy output gcs:historical-data-ci.transportenergy.org/$TRAVIS_JOB_NUMBER/

notifications:
  email: false
  slack:
    if: type = pull_request
    template:
    - "PR <%{pull_request_url}|%{repository_name}#%{pull_request_number}>: build <%{build_url}|#%{build_number}> *%{result}* in %{elapsed_time}"
    - "for commit <%{compare_url}|%{commit}>: “%{commit_subject}”"
    - "Diagnostics may be available <https://storage.googleapis.com/historical-data-ci.transportenergy.org/%{build_number}.1/index.html|here>."
    secure: rCH+JlN/1dU5innn7yVTeQ0RDWZHfT++qjhmKP3roXjjet+tRNpKHBvCmMG2nhSOkkG+OOuBuWRlbEUcohMKPImhZeiAUDz2YI8QHxPy5vQvYQm3FJs0hsX9+StDRKQ6RGOGwptwdc9zTys2NA8UdLMLuvfCB+9zfsMu+hpPyXLe64j8Wmb+NjtlvD8F6FyHMaZ1Dp0naSQK/Ye8N2KpOUPGg0gPGwoHRRC0T8EDat4u2UXLOGjtDI7WiSrIPFtVCRUyzVIjJm10U0PCYmOViHGdThnIvmwWTHtHFofJ2jSGNz9B5Q1VXjJkySBBsy/hELfNwDJlB1q8bl6xpX0dpGH/Lp3Wy33gdWDzBCGqHZ+PaUxy3/xjPU057NAE67582/FcrGAQg08FnRcecjCYG+WPA4L08bEuUlop2uHM1ITwsIkFNfxta4qMlsRDCVKa2DVL0p8wBiOWYbM9L1GO7RFd9i8dwXU0vh51+NJBBYMukoxkTlU67k57EdFtlNioKjD+JHbK29Mkdg5fzMe9yfKLFn9gVGKQeV7rBkQQC5jrDXuyy5eBf3EqxX9zC2R/ne9+10uubFXS6XxV4Su33VtktKZINoDaOPZJUX/Ol2Wbkq7nlLU8GDcnzfoUegRm/yh0iVaVRoP3ChemFcvSO9CXxfDIu3fpLPwokaXL5Vg=
